// Code generated by "github.com/hedhyw/semerr"; DO NOT EDIT.

package semerr

{{ range $errorDef := . }}
{{ if not $errorDef.Temporary }}
// {{ $errorDef.Name }} is not a temporary error.
//
{{ multlineComment $errorDef.Description }}
//
// It represents following statuses:
// - HTTP code: {{ httpStatusText $errorDef.HTTPStatus }} ({{ $errorDef.HTTPStatus }}).
// - GRPC code: {{ grpcStatusText $errorDef.GRPCStatus }} ({{ $errorDef.GRPCStatus }}).
type {{ $errorDef.Name }} struct {
	permanentWrappedError
}

// New{{ $errorDef.Name }} wraps err and creates {{ $errorDef.Name }}.
//
{{ multlineComment $errorDef.Description }}
//
// It represents following statuses:
// - HTTP code: {{ httpStatusText $errorDef.HTTPStatus }} ({{ $errorDef.HTTPStatus }}).
// - GRPC code: {{ grpcStatusText $errorDef.GRPCStatus }} ({{ $errorDef.GRPCStatus }}).
//
// If err is nil it returns nil.
func New{{ $errorDef.Name }}(err error) error {
	if err == nil {
		return nil
	}

	return {{ $errorDef.Name }}{newPermanentWrappedError(err)}
}
{{ else }}
// {{ $errorDef.Name }} is a temporary error.
//
{{ multlineComment $errorDef.Description }}
//
// It represents following statuses:
// - HTTP code: {{ httpStatusText $errorDef.HTTPStatus }} ({{ $errorDef.HTTPStatus }}).
// - GRPC code: {{ grpcStatusText $errorDef.GRPCStatus }} ({{ $errorDef.GRPCStatus }}).
type {{ $errorDef.Name }} struct {
	temporaryWrappedError
}

// New{{ $errorDef.Name }} wraps err and creates {{ $errorDef.Name }}.
//
{{ multlineComment $errorDef.Description }}
//
// It represents following statuses:
// - HTTP code: {{ httpStatusText $errorDef.HTTPStatus }} ({{ $errorDef.HTTPStatus }}).
// - GRPC code: {{ grpcStatusText $errorDef.GRPCStatus }} ({{ $errorDef.GRPCStatus }}).
//
// If err is nil it returns nil.
func New{{ $errorDef.Name }}(err error) error {
	if err == nil {
		return nil
	}

	return {{ $errorDef.Name }}{newTemporaryWrappedError(err)}
}
{{ end }}
{{ end }}
