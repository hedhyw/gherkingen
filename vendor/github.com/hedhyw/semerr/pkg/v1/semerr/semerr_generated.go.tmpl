// Code generated by "github.com/hedhyw/semerr"; DO NOT EDIT.

package semerr

{{ range $errorName, $errorDef := . }}
{{ if  $errorDef.Permanent }}
// {{ $errorName }} is a permanent error.
// {{ $errorDef.Description }}
type {{ $errorName }} struct {
	permanentWrappedError
}

// New{{ $errorName }} wraps err and creates {{ $errorName }}.
// {{ $errorDef.Description }}
// If err is nil it returns nil.
func New{{ $errorName }}(err error) error {
	if err == nil {
		return nil
	}

	return {{ $errorName }}{newPermanentWrappedError(err)}
}
{{ else }}
// {{ $errorName }} is a tememporary error.
// {{ $errorDef.Description }}
type {{ $errorName }} struct {
	temporaryWrappedError
}

// New{{ $errorName }} wraps err and creates {{ $errorName }}.
// {{ $errorDef.Description }}
// If err is nil it returns nil.
func New{{ $errorName }}(err error) error {
	if err == nil {
		return nil
	}

	return {{ $errorName }}{newTemporaryWrappedError(err)}
}
{{ end }}
{{ end }}
